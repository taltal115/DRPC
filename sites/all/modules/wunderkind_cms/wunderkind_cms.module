<?php

/**
 * Implements hook_menu().
 */
function wunderkind_cms_menu() {
  $items['home'] = array(
    'title' => 'Welcome to ' . variable_get('site_name', ''),
    'page callback' => 'wunderkind_cms_home',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['demo'] = array(
    'title' => 'Welcome to ' . variable_get('site_name', ''),
    'page callback' => 'wunderkind_cms_demo',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['home/*'] = array(
    'title' => 'Welcome to ' . variable_get('site_name', ''),
    'page callback' => 'wunderkind_cms_home',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

function wunderkind_cms_demo() {
  drupal_add_css(drupal_get_path('theme', 'wunderkind') . '/css/hover.css');
  drupal_add_css(drupal_get_path('theme', 'wunderkind') . '/css/style-demo.css');
  return '';
}

function wunderkind_cms_home() {
  $title = theme_get_setting('home_title') ? theme_get_setting('home_title') : '';
  drupal_set_title($title);
  return '';
}

/**
 * Implements hook_menu().
 */
function wunderkind_cms_block_info() {
  $blocks = array();

  $blocks['menu'] = array(
    'info' => t('Menu'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
    'region' => 'content',
    'status' => 0
  );
  $blocks['gmap'] = array(
    'info' => t('Google map'),
    'cache' => DRUPAL_CACHE_GLOBAL,
    'region' => 'content',
    'status' => 0
  );
  $blocks['footer'] = array(
    'info' => t('Footer Copyrights'),
    'cache' => DRUPAL_CACHE_GLOBAL,
    'region' => 'content',
    'status' => 0
  );
  $blocks['page_header'] = array(
    'info' => t('Page Header'),
    'cache' => DRUPAL_CACHE_PER_PAGE,
    'region' => 'content',
    'status' => 0
  );

  return $blocks;
}

/**
 * Implementation of hook_block_configure().
 */
function wunderkind_cms_block_configure($delta = '') {
  $form = array();
  switch($delta) {
    case 'page_header':
      $page = isset($_GET['destination']) ?  $_GET['destination'] : t('Default');
      $settings = variable_get('wunderkind_page_header', '');
      $form['page'] = array(
        '#title' => t('Page URL:'),
        '#type' => 'textfield',
        '#default_value' => $page
      );
      $form['page_header'] = array(
        '#type' => 'text_format',
        '#title' => t('Content'),
        '#format' => isset($settings[$page]) ? $settings[$page]['format'] : NULL,
        '#default_value' => isset($settings[$page]) ? $settings[$page]['value'] : '<div class = "centered">
         <h1>
          <small>[site-name]</small><br>
          <strong>[page-title]</strong>
         </h1>
         <p class="lead">Read our latest, blog post. [h]Still Life in Motion.[/h]</p>
         [spacer class = "lg"][/spacer]
        </div>',
        '#description' => t('Available tokens: [site-name] [page-title]'),
      );
      break;
    case 'footer':
      $form['footer_title'] = array(
        '#type' => 'textfield',
        '#title' => t('Overide default Title'),
        '#default_value' => variable_get('wunderkind_footer_title', '')
      );
      $settings = variable_get('wunderkind_footer_block', '');
      $form['footer_block'] = array(
        '#type' => 'text_format',
        '#title' => t('Overide default Content'),
        '#format' => isset($settings['format']) ? $settings['format'] : NULL,
        '#default_value' => isset($settings['value']) ? $settings['value'] : ''
      );
      break;
  }
  return $form;
}

/**
 * Implementation of hook_block_save().
 */
function wunderkind_cms_block_save($delta = '', $edit = array()) {
  switch($delta) {
    case 'page_header':
      $settings = variable_get('wunderkind_page_header', '');
      $settings[$edit['page']] = $edit['page_header'];
      variable_set('wunderkind_page_header', $settings);
      break;
    case 'footer':
      variable_set('wunderkind_footer_block', $edit['footer_block']);
      variable_set('wunderkind_footer_title', $edit['footer_title']);
      break;
  }
}

/**
 * Implementation of hook_view().
 */
function wunderkind_cms_block_view($delta) {
  $block = array();
  switch ($delta) {
    case 'gmap':
      drupal_add_js('http://maps.google.com/maps/api/js?sensor=true', array('external' => TRUE, 'cache' => FALSE));
      drupal_add_js(drupal_get_path('theme', 'wunderkind') . '/js/gmap3.min.js');
      drupal_add_js(array('wunderkind_theme' => array(
          'gmap_lat' => theme_get_setting('gmap_lat'),
          'gmap_lng' => theme_get_setting('gmap_lng'),
          'gmap_zoom' => theme_get_setting('gmap_zoom'),
          'path_to_theme' => drupal_get_path('theme', 'wunderkind')
        )
      ), 'setting');    
      $block = array('subject' => '', 'content' => '<div class="googlemap-wrapper"><div id="map" class="map-canvas"></div></div>');
      break;
    case 'menu':
      $layout = _nikadevs_cms_get_active_layout();
      if(!isset($layout['settings']['one_page']) || !$layout['settings']['one_page']) {
        $current_theme = variable_get('theme_default', 'none');
        $layouts = variable_get('nikadevs_cms_layout_' . $current_theme, array());
        foreach($layouts as $lt) {
          if(isset($lt['settings']['one_page']) && $lt['settings']['one_page']) {
            unset($lt['rows']['id-0']);
            $layout = $lt;
            break; 
          }
        }
      }
      $theme_setting = variable_get('theme_' . variable_get('theme_default', 'wunderkind') . '_settings', array());
      $logo = $theme_setting['toggle_logo'] && isset($theme_setting['logo_path']) && $theme_setting['logo_path'] ? $theme_setting['logo_path'] : '';
      $block = array('subject' => '', 'content' => theme('wunderkind_cms_menu', array('rows' => $layout['rows'], 'logo' => $logo, 'homepage' => isset($layouts) ? 0 : 1)));
      break;
    case 'footer':
      $settings = variable_get('wunderkind_footer_block', '');
      $content = isset($settings['value']) && !empty($settings['value']) ? check_markup($settings['value'], $settings['format']) : '';
      $block = array('subject' => '', 'content' => theme('wunderkind_cms_footer', array('content' => $content, 'title' => variable_get('wunderkind_footer_title', ''))));
      break;
    case 'page_header':
      $settings = variable_get('wunderkind_page_header', '');
      $setting = isset($settings[t('Default')]) ? $settings[t('Default')] : '';
      foreach($settings as $path => $value) {
        if($path == $_GET['q'] || $path == drupal_get_path_alias($_GET['q'])) {
          $setting = $value;
          break;
        }
      }
      if(empty($setting)) {
        return;
      }
      $output = str_replace(
        array('[site-name]', '[page-title]'),
        array(variable_get('site_name'), drupal_get_title()),
        $setting['value']      
      );
      $output = check_markup($output, $setting['format']);
      $block = array('subject' => '', 'content' => $output);
      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function wunderkind_cms_theme($existing, $type, $theme, $path) {
  return array(
    'wunderkind_cms_menu' => array(
      'variables' => array('rows' => array(), 'logo' => '', 'homepage' => 1),
    ),
    'wunderkind_cms_footer' => array(
      'variables' => array('content' => '', 'title' => ''),
    ),
  );
}


/**
 * Implements hook_custom_theme().
 */
function wunderkind_cms_custom_theme() {
  // Allow the user to login with default theme
  if (isset($_GET['theme']) && $_GET['theme'] == 'seven' && ($_GET['q'] == 'user' || $_GET['q'] == 'user/login')) {
    return 'seven';
  }
}

/**
 * Implements hook_form_alter().
 */
function wunderkind_cms_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'fullscreen_slider_node_form':
      $form['field_video_url']['#states'] = array(
        'visible' => array(
          '.field-name-field-slider-type select' => array('value' => 'Video Background'),
        )
      );
      $form['field_images']['#states'] = array(
        'visible' => array(
          '.field-name-field-slider-type select' => array('!value' => 'Video Background'),
        )
      );
      break;
    case 'blog_node_form':
      $form['field_images']['#states'] = array(
        'visible' => array(
          '.field-name-field-media-type select' => array('value' => 'Images'),
        )
      );
      // No break - we need to go to next operand
    case 'project_node_form':
      $form['field_video_url']['#states'] = array(
        'visible' => array(
          '.field-name-field-media-type select' => array('value' => 'Video'),
        )
      );
      break;
    case 'contact_site_form':
      $form['#attributes']['id'] = 'contact';
      $form['name']['#prefix'] = '<div class = "row"><div class = "col-md-6">';
      $form['message']['#prefix'] = '</div><div class = "col-md-6">';
      $form['actions']['#prefix'] = '</div></div><div class = "row"><div class = "col-md-12 centered">';
      $form['actions']['submit']['#attributes']['class'][] = 'submit';
      $form['actions']['#suffix'] = '</div></div>';
      break;
    case 'search_block_form':
      $form['search_block_form']['#prefix'] = '<div class = "input-group">';
      $form['search_block_form']['#attributes']['placeholder'] = t('Search here...');
      $form['actions']['submit']['#attributes']['class'] = array('btn-glypicon');
      $form['actions']['submit']['#value'] = decode_entities('&#xe003;');
      $form['actions']['#prefix'] = '<div class = "input-group-btn">';
      $form['actions']['#suffix'] = '</div></div>';
      break;
    case 'search_form':
      unset($form['basic']['keys']['#title'], $form['#attributes']);
      $form['basic']['keys']['#prefix'] = '<div class = "input-group">';
      $form['basic']['keys']['#attributes']['placeholder'] = t('Search here...');
      $form['basic']['submit']['#attributes']['class'] = array('btn-glypicon');
      $form['basic']['submit']['#value'] = decode_entities('&#xe003;');
      $form['basic']['submit']['#prefix'] = '<div class = "input-group-btn">';
      $form['basic']['submit']['#suffix'] = '</div></div>';
      break;
    case 'user_login':
    case 'user_register_form':
    case 'user_pass':
      $form['#prefix'] = '<div class = "box">';
      $form['#suffix'] = '</div>';
      break;
  }
}

/**
 * Implements hook_node_view().
 */
function wunderkind_cms_node_view($node, $view_mode, $langcode) {
  if($node->type == 'fullscreen_slider') {
    $fields = array('field_images', 'field_slider_type');
    foreach($fields as $field) {
      $$field = _get_node_field($node, $field);
    }
    if($field_slider_type[0]['value'] == 'FullScreen Slider') {
      $images = array();
      foreach($field_images as $image) {
        $images[] = file_create_url($image['uri']);
      }
      $settings = array(
        'fade' => 750,
        'duration' => 4000
      );
      drupal_add_js(drupal_get_path('theme', 'wunderkind') . '/js/jquery.backstretch.min.js');
      drupal_add_js(array('wunderkind_cms' => array('backstretch_images' =>  $images, 'backstretch_settings' => (object)$settings)), 'setting');
    }
  }
  if ($view_mode == 'full' && in_array($node->type, array('project', 'blog'))) {
    $nids = db_select('node', 'n')->condition('n.type', $node->type)->fields('n', array('nid', 'title'))->orderBy('n.created', 'DESC')->execute()->fetchAll();
    $offset = 0;
    foreach($nids as $i => $entity) {
      $offset = $entity->nid == $node->nid ? $i : $offset; 
    }
    $node->next = !$offset ? $nids[count($nids) - 1] : $nids[$offset - 1];
    $node->prev = ($offset + 1) == count($nids) ? $nids[0] : $nids[$offset + 1];
  }
}

function _get_node_field($node, $field, $lang = 'en', $fallback = 'en') {
  $var = FALSE;
  if(!empty($node->{$field}[$lang])) {
      $var = $node->{$field}[$lang];
  } elseif(!empty($node->{$field}[$fallback])) {
      $var = $node->{$field}[$fallback];
  } elseif(!empty($node->{$field}['und'])) {
      $var = $node->{$field}['und'];
  } elseif(!empty($node->{$field})) {
      $var = $node->{$field};
  }
  return $var;
}
